# coding: utf-8

"""
    app-server

    Resource for managing app-server  # noqa: E501

    The version of the OpenAPI document: 1.0.0
    Contact: huangrh@goodrain.com
    Generated by: https://openapi-generator.tech
"""


import pprint
import re  # noqa: F401

import six

from openapi_client.configuration import Configuration


class V1MarketInfoResponse(object):
    """NOTE: This class is auto generated by OpenAPI Generator.
    Ref: https://openapi-generator.tech

    Do not edit the class manually.
    """

    """
    Attributes:
      openapi_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    openapi_types = {
        'access_actions': 'list[str]',
        'create_time': 'datetime',
        'description': 'str',
        'name': 'str',
        'status': 'int',
        'version': 'str'
    }

    attribute_map = {
        'access_actions': 'accessActions',
        'create_time': 'createTime',
        'description': 'description',
        'name': 'name',
        'status': 'status',
        'version': 'version'
    }

    def __init__(self, access_actions=None, create_time=None, description=None, name=None, status=None, version=None, local_vars_configuration=None):  # noqa: E501
        """V1MarketInfoResponse - a model defined in OpenAPI"""  # noqa: E501
        if local_vars_configuration is None:
            local_vars_configuration = Configuration()
        self.local_vars_configuration = local_vars_configuration

        self._access_actions = None
        self._create_time = None
        self._description = None
        self._name = None
        self._status = None
        self._version = None
        self.discriminator = None

        self.access_actions = access_actions
        self.create_time = create_time
        self.description = description
        self.name = name
        self.status = status
        if version is not None:
            self.version = version

    @property
    def access_actions(self):
        """Gets the access_actions of this V1MarketInfoResponse.  # noqa: E501


        :return: The access_actions of this V1MarketInfoResponse.  # noqa: E501
        :rtype: list[str]
        """
        return self._access_actions

    @access_actions.setter
    def access_actions(self, access_actions):
        """Sets the access_actions of this V1MarketInfoResponse.


        :param access_actions: The access_actions of this V1MarketInfoResponse.  # noqa: E501
        :type access_actions: list[str]
        """
        if self.local_vars_configuration.client_side_validation and access_actions is None:  # noqa: E501
            raise ValueError("Invalid value for `access_actions`, must not be `None`")  # noqa: E501

        self._access_actions = access_actions

    @property
    def create_time(self):
        """Gets the create_time of this V1MarketInfoResponse.  # noqa: E501


        :return: The create_time of this V1MarketInfoResponse.  # noqa: E501
        :rtype: datetime
        """
        return self._create_time

    @create_time.setter
    def create_time(self, create_time):
        """Sets the create_time of this V1MarketInfoResponse.


        :param create_time: The create_time of this V1MarketInfoResponse.  # noqa: E501
        :type create_time: datetime
        """
        if self.local_vars_configuration.client_side_validation and create_time is None:  # noqa: E501
            raise ValueError("Invalid value for `create_time`, must not be `None`")  # noqa: E501

        self._create_time = create_time

    @property
    def description(self):
        """Gets the description of this V1MarketInfoResponse.  # noqa: E501


        :return: The description of this V1MarketInfoResponse.  # noqa: E501
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description):
        """Sets the description of this V1MarketInfoResponse.


        :param description: The description of this V1MarketInfoResponse.  # noqa: E501
        :type description: str
        """
        if self.local_vars_configuration.client_side_validation and description is None:  # noqa: E501
            raise ValueError("Invalid value for `description`, must not be `None`")  # noqa: E501

        self._description = description

    @property
    def name(self):
        """Gets the name of this V1MarketInfoResponse.  # noqa: E501


        :return: The name of this V1MarketInfoResponse.  # noqa: E501
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this V1MarketInfoResponse.


        :param name: The name of this V1MarketInfoResponse.  # noqa: E501
        :type name: str
        """
        if self.local_vars_configuration.client_side_validation and name is None:  # noqa: E501
            raise ValueError("Invalid value for `name`, must not be `None`")  # noqa: E501

        self._name = name

    @property
    def status(self):
        """Gets the status of this V1MarketInfoResponse.  # noqa: E501


        :return: The status of this V1MarketInfoResponse.  # noqa: E501
        :rtype: int
        """
        return self._status

    @status.setter
    def status(self, status):
        """Sets the status of this V1MarketInfoResponse.


        :param status: The status of this V1MarketInfoResponse.  # noqa: E501
        :type status: int
        """
        if self.local_vars_configuration.client_side_validation and status is None:  # noqa: E501
            raise ValueError("Invalid value for `status`, must not be `None`")  # noqa: E501

        self._status = status

    @property
    def version(self):
        """Gets the version of this V1MarketInfoResponse.  # noqa: E501

        当前SAAS版本  # noqa: E501

        :return: The version of this V1MarketInfoResponse.  # noqa: E501
        :rtype: str
        """
        return self._version

    @version.setter
    def version(self, version):
        """Sets the version of this V1MarketInfoResponse.

        当前SAAS版本  # noqa: E501

        :param version: The version of this V1MarketInfoResponse.  # noqa: E501
        :type version: str
        """

        self._version = version

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.openapi_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, V1MarketInfoResponse):
            return False

        return self.to_dict() == other.to_dict()

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        if not isinstance(other, V1MarketInfoResponse):
            return True

        return self.to_dict() != other.to_dict()
