# coding: utf-8

"""
    app-server

    Resource for managing app-server  # noqa: E501

    The version of the OpenAPI document: 1.0.0
    Contact: huangrh@goodrain.com
    Generated by: https://openapi-generator.tech
"""


import pprint
import re  # noqa: F401

import six

from openapi_client.configuration import Configuration


class V1StoreAppVersionTempleteAppShareVolume(object):
    """NOTE: This class is auto generated by OpenAPI Generator.
    Ref: https://openapi-generator.tech

    Do not edit the class manually.
    """

    """
    Attributes:
      openapi_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    openapi_types = {
        'mnt_dir': 'str',
        'mnt_name': 'str',
        'service_share_uuid': 'str'
    }

    attribute_map = {
        'mnt_dir': 'mnt_dir',
        'mnt_name': 'mnt_name',
        'service_share_uuid': 'service_share_uuid'
    }

    def __init__(self, mnt_dir=None, mnt_name=None, service_share_uuid=None, local_vars_configuration=None):  # noqa: E501
        """V1StoreAppVersionTempleteAppShareVolume - a model defined in OpenAPI"""  # noqa: E501
        if local_vars_configuration is None:
            local_vars_configuration = Configuration()
        self.local_vars_configuration = local_vars_configuration

        self._mnt_dir = None
        self._mnt_name = None
        self._service_share_uuid = None
        self.discriminator = None

        self.mnt_dir = mnt_dir
        self.mnt_name = mnt_name
        self.service_share_uuid = service_share_uuid

    @property
    def mnt_dir(self):
        """Gets the mnt_dir of this V1StoreAppVersionTempleteAppShareVolume.  # noqa: E501


        :return: The mnt_dir of this V1StoreAppVersionTempleteAppShareVolume.  # noqa: E501
        :rtype: str
        """
        return self._mnt_dir

    @mnt_dir.setter
    def mnt_dir(self, mnt_dir):
        """Sets the mnt_dir of this V1StoreAppVersionTempleteAppShareVolume.


        :param mnt_dir: The mnt_dir of this V1StoreAppVersionTempleteAppShareVolume.  # noqa: E501
        :type mnt_dir: str
        """
        if self.local_vars_configuration.client_side_validation and mnt_dir is None:  # noqa: E501
            raise ValueError("Invalid value for `mnt_dir`, must not be `None`")  # noqa: E501

        self._mnt_dir = mnt_dir

    @property
    def mnt_name(self):
        """Gets the mnt_name of this V1StoreAppVersionTempleteAppShareVolume.  # noqa: E501


        :return: The mnt_name of this V1StoreAppVersionTempleteAppShareVolume.  # noqa: E501
        :rtype: str
        """
        return self._mnt_name

    @mnt_name.setter
    def mnt_name(self, mnt_name):
        """Sets the mnt_name of this V1StoreAppVersionTempleteAppShareVolume.


        :param mnt_name: The mnt_name of this V1StoreAppVersionTempleteAppShareVolume.  # noqa: E501
        :type mnt_name: str
        """
        if self.local_vars_configuration.client_side_validation and mnt_name is None:  # noqa: E501
            raise ValueError("Invalid value for `mnt_name`, must not be `None`")  # noqa: E501

        self._mnt_name = mnt_name

    @property
    def service_share_uuid(self):
        """Gets the service_share_uuid of this V1StoreAppVersionTempleteAppShareVolume.  # noqa: E501


        :return: The service_share_uuid of this V1StoreAppVersionTempleteAppShareVolume.  # noqa: E501
        :rtype: str
        """
        return self._service_share_uuid

    @service_share_uuid.setter
    def service_share_uuid(self, service_share_uuid):
        """Sets the service_share_uuid of this V1StoreAppVersionTempleteAppShareVolume.


        :param service_share_uuid: The service_share_uuid of this V1StoreAppVersionTempleteAppShareVolume.  # noqa: E501
        :type service_share_uuid: str
        """
        if self.local_vars_configuration.client_side_validation and service_share_uuid is None:  # noqa: E501
            raise ValueError("Invalid value for `service_share_uuid`, must not be `None`")  # noqa: E501

        self._service_share_uuid = service_share_uuid

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.openapi_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, V1StoreAppVersionTempleteAppShareVolume):
            return False

        return self.to_dict() == other.to_dict()

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        if not isinstance(other, V1StoreAppVersionTempleteAppShareVolume):
            return True

        return self.to_dict() != other.to_dict()
